@page
@model FUNewsManagementSystem.WebRazorPage.Pages.NewsArticles.IndexModel
@{
    ViewData["Title"] = "News Articles List";
}

<style>
    body {
        background-color: #ffffff; /* Nền trắng cho trang tổng thể */
    }

    h1 {
        color: #000000; /* Chữ đen cho tiêu đề */
        margin-bottom: 20px;
    }

    .btn-primary {
        background-color: #007bff; /* Màu xanh dương nhạt cho nút Add New Article */
        border-color: #007bff;
        color: #ffffff;
    }

        .btn-primary:hover {
            background-color: #0056b3; /* Màu xanh đậm hơn khi hover */
            border-color: #0056b3;
        }

    table.table-bordered.table-striped {
        border: 1px solid #000000; /* Viền đen cho bảng */
    }

        table.table-bordered.table-striped thead.table-dark {
            background-color: #000000; /* Nền đen cho tiêu đề cột */
            color: #ffffff; /* Chữ trắng cho tiêu đề cột */
        }

        table.table-bordered.table-striped tbody tr {
            background-color: #ffffff; /* Nền trắng cho nội dung hàng */
            border-bottom: 1px solid #000000; /* Viền đen dưới mỗi hàng */
        }

        table.table-bordered.table-striped td, table.table-bordered.table-striped th {
            border: 1px solid #000000; /* Viền đen cho các ô */
        }

    .badge.bg-secondary {
        background-color: #6c757d; /* Màu xám cho badge Tags */
        color: #ffffff; /* Chữ trắng trên badge */
    }

    .btn-warning.btn-sm {
        background-color: #ffc107; /* Màu vàng cho nút Edit */
        border-color: #ffc107;
        color: #000000; /* Chữ đen trên nút vàng */
    }

        .btn-warning.btn-sm:hover {
            background-color: #e0a800; /* Màu vàng đậm hơn khi hover */
            border-color: #e0a800;
        }

    .btn-danger.btn-sm {
        background-color: #dc3545; /* Màu đỏ cho nút Delete */
        border-color: #dc3545;
        color: #ffffff; /* Chữ trắng trên nút đỏ */
    }

        .btn-danger.btn-sm:hover {
            background-color: #c82333; /* Màu đỏ đậm hơn khi hover */
            border-color: #c82333;
        }
</style>

<h1>News Articles List</h1>

<!-- Nút tạo mới mở popup, giữ nguyên chức năng -->
<p>
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createModal">
        Add New Article
    </button>
</p>

<!-- Bảng hiển thị danh sách bài viết, giữ nguyên logic dữ liệu -->
<table class="table table-bordered table-striped">
    <thead class="table-dark">
        <tr class="text-center">
            <th>ID</th>
            <th>Title</th>
            <th>Headline</th>
            <th>Content</th>
            <th>News Source</th>
            <th>Created Date</th>
            <th>Category</th>
            <th>Tags</th>
            <th>Author</th>
            <th>Updater</th>
            <th>Modified Date</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var article in Model.NewsArticles)
        {
            <tr>
                <td>@article.NewsArticleId</td>
                <td>@article.NewsTitle</td>
                <td>@article.Headline</td>
                <td class="content-column">@article.NewsContent</td>
                <td>@article.NewsSource</td>
                <td>@article.CreatedDate?.ToString("yyyy-MM-dd")</td>
                <td>@(article.Category?.CategoryName ?? "N/A")</td>
                <td>
                    @if (article.Tags != null && article.Tags.Any())
                    {
                        foreach (var tag in article.Tags)
                        {
                            <span class="badge bg-secondary">@tag.TagName</span>
                        }
                    }
                    else
                    {
                        <span class="text-muted">No Tags</span>
                    }
                </td>
                <td>@(article.CreatedBy?.AccountName ?? "N/A")</td>
                <td>@(Model.GetUpdaterName(article.UpdatedById) ?? "No Updater")</td>
                <td>@article.ModifiedDate?.ToString("yyyy-MM-dd")</td>
                <td>@(article.NewsStatus == true ? "Active" : "Inactive")</td>
                <td class="">
                   <div class="d-flex justify-content-center align-items-center gap-3">
                        <button type="button" class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#editModal" onclick="loadEditForm('@article.NewsArticleId')">
                            Edit
                        </button>
                        <button type="button" class="btn btn-danger btn-sm" onclick="loadDeleteForm('@article.NewsArticleId')">
                            Delete
                        </button>
                   </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal cho Edit, giữ nguyên chức năng -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Edit News Article</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="editModalBody">
                <!-- Nội dung form sẽ được load động qua AJAX -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal cho Create, giữ nguyên chức năng -->
<div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createModalLabel">Create News Article</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="createModalBody">
                <!-- Nội dung form sẽ được load động qua AJAX -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal cho Delete, giữ nguyên chức năng -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="deleteModalBody">
                <!-- Nội dung xác nhận xóa sẽ được load động qua AJAX -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    Close
                </button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">
                    Confirm Delete
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Load form edit, giữ nguyên chức năng
        function loadEditForm(articleId) {
            fetch(`/NewsArticles/Edit?id=${articleId}`)
                .then(response => response.text())
                .then(data => {
                    document.getElementById('editModalBody').innerHTML = data;
                })
                .catch(error => console.error('Error loading edit form:', error));
        }

        // Load form create khi nhấn nút "Add New Article", giữ nguyên chức năng
        window.onload = function() {
            document.querySelector('[data-bs-target="#createModal"]').addEventListener('click', function () {
                fetch(`/NewsArticles/Create`)
                    .then(response => response.text())
                    .then(data => {
                        document.getElementById('createModalBody').innerHTML = data;
                        // Load lại Bootstrap CSS nếu cần
                        var modalBody = document.getElementById('createModalBody');
                        modalBody.querySelectorAll('.form-control, .form-select, .form-check-input').forEach(el => {
                            el.classList.add('form-control');
                        });
                    })
                    .catch(error => console.error('Error loading create form:', error));
            });
        };

        // Xử lý submit form create, giữ nguyên chức năng
        document.addEventListener('DOMContentLoaded', function() {
            $(document).on('submit', '#createForm', function(event) {
                event.preventDefault();
                var formData = $(this).serialize();
                $.ajax({
                    url: '/NewsArticles/Create?handler=Create',
                    type: 'POST',
                    data: formData,
                    success: function(response) {
                        if (response.success) {
                            alert(response.message);
                            $('#createModal').modal('hide');
                            location.reload();
                        } else {
                            alert(response.message || 'Error creating news article.');
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Error:', error);
                        alert('An unexpected error occurred.');
                    }
                });
            });

            // Load form delete khi nhấn nút "Delete", giữ nguyên chức năng
            window.loadDeleteForm = function(articleId) {
                fetch(`/NewsArticles/Delete?id=${articleId}`)
                    .then(response => response.text())
                    .then(data => {
                        document.getElementById('deleteModalBody').innerHTML = data;
                        $('#deleteModal').modal('show'); // Hiển thị modal
                    })
                    .catch(error => console.error('Error loading delete form:', error));
            };

            // Xử lý submit form delete, giữ nguyên chức năng
            $(document).on('click', '#confirmDeleteButton', function() {
                var form = $('#deleteModalBody').find('#deleteForm');
                var formData = form.serialize();

                $.ajax({
                    url: '/NewsArticles/Delete?handler=Delete',
                    type: 'POST',
                    data: formData,
                    success: function(response) {
                        if (response.success) {
                            alert(response.message);
                            $('#deleteModal').modal('hide');
                            location.reload(); // Reload trang để cập nhật danh sách
                        } else {
                            alert(response.message || 'Error deleting news article.');
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Error:', error);
                        alert('An unexpected error occurred.');
                    }
                });
            });
        });
    </script>
}
<style>
    .content-column {
        max-width: 200px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

        .content-column:hover {
            white-space: normal;
            overflow: visible;
            background: rgba(0, 0, 0, 0.05);
            padding: 5px;
            border-radius: 5px;
        }

</style>